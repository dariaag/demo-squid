import * as ethers from 'ethers'
import {LogEvent, Func, ContractBase} from './abi.support'
import {ABI_JSON} from './0x6ACAb4C9c4e3a0c78435FDB5Ad1719C95460a668.abi'

export const abi = new ethers.Interface(ABI_JSON);

export const events = {
    ERC1155OrderCancelled: new LogEvent<([maker: string, nonce: bigint] & {maker: string, nonce: bigint})>(
        abi, '0x4d5ea7da64f50a4a329921b8d2cab52dff4ebcc58b61d10ff839e28e91445684'
    ),
    ERC1155OrderFilled: new LogEvent<([direction: number, maker: string, taker: string, nonce: bigint, erc20Token: string, erc20FillAmount: bigint, erc1155Token: string, erc1155TokenId: bigint, erc1155FillAmount: bigint, matcher: string] & {direction: number, maker: string, taker: string, nonce: bigint, erc20Token: string, erc20FillAmount: bigint, erc1155Token: string, erc1155TokenId: bigint, erc1155FillAmount: bigint, matcher: string})>(
        abi, '0x20cca81b0e269b265b3229d6b537da91ef475ca0ef55caed7dd30731700ba98d'
    ),
    ERC1155OrderPreSigned: new LogEvent<([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})>(
        abi, '0x5e91ddfeb7bf2e12f7e8ab017d2b63a9217f004a15a53346ad90353ec63d14e4'
    ),
}

export const functions = {
    EIP712_DOMAIN_SEPARATOR: new Func<[], {}, string>(
        abi, '0xdab400f3'
    ),
    FEATURE_NAME: new Func<[], {}, string>(
        abi, '0x6ae4b4f7'
    ),
    FEATURE_VERSION: new Func<[], {}, bigint>(
        abi, '0x031b905c'
    ),
    _buyERC1155: new Func<[sellOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), params: ([buyAmount: bigint, ethAvailable: bigint, takerCallbackData: string] & {buyAmount: bigint, ethAvailable: bigint, takerCallbackData: string})], {sellOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), params: ([buyAmount: bigint, ethAvailable: bigint, takerCallbackData: string] & {buyAmount: bigint, ethAvailable: bigint, takerCallbackData: string})}, []>(
        abi, '0xa4f4d30d'
    ),
    batchBuyERC1155s: new Func<[sellOrders: Array<([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})>, signatures: Array<([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string})>, erc1155FillAmounts: Array<bigint>, callbackData: Array<string>, revertIfIncomplete: boolean], {sellOrders: Array<([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})>, signatures: Array<([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string})>, erc1155FillAmounts: Array<bigint>, callbackData: Array<string>, revertIfIncomplete: boolean}, Array<boolean>>(
        abi, '0x84680615'
    ),
    batchCancelERC1155Orders: new Func<[orderNonces: Array<bigint>], {orderNonces: Array<bigint>}, []>(
        abi, '0xa1865d6f'
    ),
    buyERC1155: new Func<[sellOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), erc1155BuyAmount: bigint, callbackData: string], {sellOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), erc1155BuyAmount: bigint, callbackData: string}, []>(
        abi, '0x7cdb54d8'
    ),
    cancelERC1155Order: new Func<[orderNonce: bigint], {orderNonce: bigint}, []>(
        abi, '0x06d2596b'
    ),
    getERC1155OrderHash: new Func<[order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})], {order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})}, string>(
        abi, '0x1de3a7ac'
    ),
    getERC1155OrderInfo: new Func<[order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})], {order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})}, ([orderHash: string, status: number, orderAmount: bigint, remainingAmount: bigint] & {orderHash: string, status: number, orderAmount: bigint, remainingAmount: bigint})>(
        abi, '0x4991fd72'
    ),
    migrate: new Func<[], {}, string>(
        abi, '0x8fd3ab80'
    ),
    onERC1155Received: new Func<[operator: string, _: string, tokenId: bigint, value: bigint, data: string], {operator: string, tokenId: bigint, value: bigint, data: string}, string>(
        abi, '0xf23a6e61'
    ),
    preSignERC1155Order: new Func<[order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})], {order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})}, []>(
        abi, '0x7b757d97'
    ),
    sellERC1155: new Func<[buyOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), erc1155TokenId: bigint, erc1155SellAmount: bigint, unwrapNativeToken: boolean, callbackData: string], {buyOrder: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string}), erc1155TokenId: bigint, erc1155SellAmount: bigint, unwrapNativeToken: boolean, callbackData: string}, []>(
        abi, '0x6e2eec9e'
    ),
    validateERC1155OrderProperties: new Func<[order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), erc1155TokenId: bigint], {order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), erc1155TokenId: bigint}, []>(
        abi, '0x2ac6f62a'
    ),
    validateERC1155OrderSignature: new Func<[order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string})], {order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint}), signature: ([signatureType: number, v: number, r: string, s: string] & {signatureType: number, v: number, r: string, s: string})}, []>(
        abi, '0x0d32a531'
    ),
}

export class Contract extends ContractBase {

    EIP712_DOMAIN_SEPARATOR(): Promise<string> {
        return this.eth_call(functions.EIP712_DOMAIN_SEPARATOR, [])
    }

    FEATURE_NAME(): Promise<string> {
        return this.eth_call(functions.FEATURE_NAME, [])
    }

    FEATURE_VERSION(): Promise<bigint> {
        return this.eth_call(functions.FEATURE_VERSION, [])
    }

    getERC1155OrderHash(order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})): Promise<string> {
        return this.eth_call(functions.getERC1155OrderHash, [order])
    }

    getERC1155OrderInfo(order: ([direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint] & {direction: number, maker: string, taker: string, expiry: bigint, nonce: bigint, erc20Token: string, erc20TokenAmount: bigint, fees: Array<([recipient: string, amount: bigint, feeData: string] & {recipient: string, amount: bigint, feeData: string})>, erc1155Token: string, erc1155TokenId: bigint, erc1155TokenProperties: Array<([propertyValidator: string, propertyData: string] & {propertyValidator: string, propertyData: string})>, erc1155TokenAmount: bigint})): Promise<([orderHash: string, status: number, orderAmount: bigint, remainingAmount: bigint] & {orderHash: string, status: number, orderAmount: bigint, remainingAmount: bigint})> {
        return this.eth_call(functions.getERC1155OrderInfo, [order])
    }
}
